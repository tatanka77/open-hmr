<?xml version='1.0' encoding='UTF-8' ?>
<rss version="2.0" xmlns:dc="http://purl.org/dc/elements/1.1/">

<!--
#
#   http://code.google.com/media-translate/
#   Copyright (C) 2010  Serge A. Timchenko
#
#   This program is free software: you can redistribute it and/or modify
#   it under the terms of the GNU General Public License as published by
#   the Free Software Foundation, either version 3 of the License, or
#   (at your option) any later version.
#
#   This program is distributed in the hope that it will be useful,
#   but WITHOUT ANY WARRANTY; without even the implied warranty of
#   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
#   GNU General Public License for more details.
#
#   You should have received a copy of the GNU General Public License
#   along with this program. If not, see <http://www.gnu.org/licenses/>.
#
-->

	<mediaDisplay name="threePartsView"
		sideColorLeft="0:0:0"
		sideLeftWidthPC="0"
		sideColorRight="0:0:0"
		headerImageWidthPC="0"
		headerXPC="16"
		headerYPC="3"
		headerWidthPC="0"
		itemImageXPC="27"
		itemImageYPC="18"
		itemXPC="40"
		itemYPC="18"
		itemWidthPC="54"
		headerCapXPC="90"
		headerCapYPC="10"
		headerCapWidthPC="0"
		backgroundColor="0:0:0"
		itemBackgroundColor="0:0:0"
		menuXPC="10"
		menuYPC="25"
		menuWidthPC="15"
		menuHeightPC="8"
		showHeader="no"
		selectMenuOnRight="no"
		forceFocusOnItem="no"
		forceFocusOnMenu="no"
		showDefaultInfo="yes"
		infoYPC="90"
		fontSize="16" >

		<idleImage idleImageYPC="45" idleImageHeightPC="10">../etc/translate/rss/image/POPUP_LOADING_01.png
			<idleImageWidthPC><script>10 * screenYp / screenXp;</script></idleImageWidthPC>
			<idleImageXPC><script>45 + 10 * (1 - screenYp / screenXp) / 2;</script></idleImageXPC>
		</idleImage>
		<idleImage idleImageYPC="45" idleImageHeightPC="10">../etc/translate/rss/image/POPUP_LOADING_02.png
			<idleImageWidthPC><script>10 * screenYp / screenXp;</script></idleImageWidthPC>
			<idleImageXPC><script>45 + 10 * (1 - screenYp / screenXp) / 2;</script></idleImageXPC>
		</idleImage>
		<idleImage idleImageYPC="45" idleImageHeightPC="10">../etc/translate/rss/image/POPUP_LOADING_03.png
			<idleImageWidthPC><script>10 * screenYp / screenXp;</script></idleImageWidthPC>
			<idleImageXPC><script>45 + 10 * (1 - screenYp / screenXp) / 2;</script></idleImageXPC>
		</idleImage>
		<idleImage idleImageYPC="45" idleImageHeightPC="10">../etc/translate/rss/image/POPUP_LOADING_04.png
			<idleImageWidthPC><script>10 * screenYp / screenXp;</script></idleImageWidthPC>
			<idleImageXPC><script>45 + 10 * (1 - screenYp / screenXp) / 2;</script></idleImageXPC>
		</idleImage>
		<idleImage idleImageYPC="45" idleImageHeightPC="10">../etc/translate/rss/image/POPUP_LOADING_05.png
			<idleImageWidthPC><script>10 * screenYp / screenXp;</script></idleImageWidthPC>
			<idleImageXPC><script>45 + 10 * (1 - screenYp / screenXp) / 2;</script></idleImageXPC>
		</idleImage>
		<idleImage idleImageYPC="45" idleImageHeightPC="10">../etc/translate/rss/image/POPUP_LOADING_06.png
			<idleImageWidthPC><script>10 * screenYp / screenXp;</script></idleImageWidthPC>
			<idleImageXPC><script>45 + 10 * (1 - screenYp / screenXp) / 2;</script></idleImageXPC>
		</idleImage>
		<idleImage idleImageYPC="45" idleImageHeightPC="10">../etc/translate/rss/image/POPUP_LOADING_07.png
			<idleImageWidthPC><script>10 * screenYp / screenXp;</script></idleImageWidthPC>
			<idleImageXPC><script>45 + 10 * (1 - screenYp / screenXp) / 2;</script></idleImageXPC>
		</idleImage>
		<idleImage idleImageYPC="45" idleImageHeightPC="10">../etc/translate/rss/image/POPUP_LOADING_08.png
			<idleImageWidthPC><script>10 * screenYp / screenXp;</script></idleImageWidthPC>
			<idleImageXPC><script>45 + 10 * (1 - screenYp / screenXp) / 2;</script></idleImageXPC>
		</idleImage>

		<text offsetXPC="5" offsetYPC="0" widthPC="100" heightPC="15" fontSize="20" backgroundColor="8:8:16" foregroundColor="200:200:200">
			<script>pageTitle;</script>
		</text>

		<image offsetXPC="0" offsetYPC="12" widthPC="100" heightPC="1">
			../etc/translate/rss/image/gradient_line.bmp
		</image>

		<image offsetXPC="80" offsetYPC="1" widthPC="15" heightPC="10">
			../etc/translate/rss/image/YouTubeLogo.jpg
			<widthPC>
				<script>300 / 152 * 10 * screenYp / screenXp;</script>
			</widthPC>
			<offsetXPC>
				<script>95 - 300 / 152 * 10 * screenYp / screenXp;</script>
			</offsetXPC>
		</image>

		<text offsetXPC="80" offsetYPC="90" widthPC="5" heightPC="5" fontSize="14" backgroundColor="8:8:16" foregroundColor="100:100:100">
			<script>youtubeRegion;</script>
		</text>

		<onUserInput>
			<script>
				ret = "false";

				userInput = currentUserInput();
				majorContext = getPageInfo("majorContext");

				print("*** majorContext=",majorContext);
				print("*** userInput=",userInput);

				if (userInput == "return" || (userInput == "left" &amp;&amp; majorContext == "menu"))
				{
					if(history != -1)
					{
						print("******* reInitialize: from history");
						feedUrl = getStringArrayAt(historyUrl, history);
						pageTitle = getStringArrayAt(historyTitle, history);
						page = getStringArrayAt(historyPage, history);
						idx = getStringArrayAt(historyIdx, history);
						historyUrl = deleteStringArrayAt(historyUrl, history);
						historyTitle = deleteStringArrayAt(historyTitle, history);
						historyPage = deleteStringArrayAt(historyPage, history);
						historyIdx = deleteStringArrayAt(historyIdx, history);
						history -= 1;
						mode = 1;
						setRefreshTime(1);
						ret = "true";
					}
				}
				else if (userInput == "pagedown" || userInput == "pageup")
				{
					idx = Integer(getFocusItemIndex());
					if (userInput == "pagedown")
					{
						idx -= -5;
						if(idx &gt;= itemSize)
							idx = itemSize-1;
					}
					else
					{
						idx -= 5;
						if(idx &lt; 0)
							idx = 0;
					}
					setFocusItemIndex(idx);
					setItemFocus(idx);
					redrawDisplay();
					ret = "true";
				}
				else if(majorContext == "items" &amp;&amp; userInput == "right")
				{
					idx = getFocusItemIndex();
					url = getStringArrayAt(idArray, idx);
					title = getStringArrayAt(titleArray, idx);

					arr = null;
					arr = pushBackStringArray(arr, url);
					arr = pushBackStringArray(arr, title);
					print("arr=",arr);
					print("storagePath=",storagePath);

					writeStringToFile(storagePath, arr);
					act = doModalRss("rss_file://../etc/translate/rss/youtube/yt_entry.rss");
					if(act != null)
					{
						history += 1;
						historyUrl = pushBackStringArray(historyUrl, feedUrl);
						historyTitle = pushBackStringArray(historyTitle, pageTitle);
						historyPage = pushBackStringArray(historyPage, page);
						historyIdx = pushBackStringArray(historyIdx, getFocusItemIndex());

						arr = readStringFromFile(storagePath);
						print("******* reInitialize: "+arr);
						feedUrl = getStringArrayAt(arr, 0);
						pageTitle = getStringArrayAt(arr, 1);
						keyword = getStringArrayAt(arr, 2);
						if(keyword != null)
							feedUrl += "orderby=relevance&amp;vq=" + urlEncode(keyword) + "&amp;";
						print("keyword=",keyword);
						print("feedUrl=",feedUrl);

						page = 1;
						idx = 0;
						mode = 1;
						setRefreshTime(1);
					}
					print("********** doModalRss=",act);
					ret = "true";
				}
				ret;
			</script>
		</onUserInput>
	</mediaDisplay>

	<onEnter>
		translate_base_url  = "http://127.0.0.1/cgi-bin/translate?";
		screenXp = 4;
		screenYp = 3;
		rssconf = readStringFromFile(getStoragePath("key")+"translate.dat");
		print("rssconf:",rssconf);
		if(rssconf != null)
		{
			value = getStringArrayAt(rssconf, 0);
			if(value != null &amp;&amp; value != "")
				translate_base_url = value;
			value = getStringArrayAt(rssconf, 1);
			if(value != null &amp;&amp; value != "")
				screenXp = Integer(value);
			value = getStringArrayAt(rssconf, 2);
			if(value != null &amp;&amp; value != "")
				screenYp = Integer(value);
		}
		print("rssconf:",translate_base_url,screenXp,screenYp);

		cachePath = getStoragePath("key");
		optionsArray = readStringFromFile(cachePath + "youtubeOptions.dat");
		if(optionsArray == null)
		{
			youtubeRegion = readStringFromFile(cachePath + "youtubeRegion.dat");
			if(youtubeRegion == null)
			youtubeRegion = "ES";
			hd = 1;
			username = " ";
		}
		else
		{
			youtubeRegion = getStringArrayAt(optionsArray, 0);
			hd = getStringArrayAt(optionsArray, 1);
			username = getStringArrayAt(optionsArray, 2);
		}

		page = 1;
		maxResults = 20;

		storagePath = getStoragePath("tmp");
		storagePath = storagePath + "youtubeRSS.dat";
		arr = readStringFromFile(storagePath);
		print("******* Initialize: "+arr);
		feedUrl = getStringArrayAt(arr, 0);
		pageTitle = getStringArrayAt(arr, 1);
		keyword = getStringArrayAt(arr, 2);
		if(keyword != null)
			feedUrl += "orderby=relevance&amp;vq=" + urlEncode(keyword) + "&amp;";
		print("keyword=",keyword);
		print("feedUrl=",feedUrl);

		idx = 0;
		page = 1;

		historyUrl = null;
		historyTitle = null;
		historyPage = null;
		historyIdx = null;

		history = -1;

		mode = 1;
		setRefreshTime(1);
	</onEnter>

	<onExit>
		playItemURL(-1, 1);
		setRefreshTime(-1);
	</onExit>

	<onRefresh>
		if(mode == 1)
		{
			setRefreshTime(-1);

			startIndex = (page - 1) * maxResults + 1;
			url = feedUrl+"start-index="+startIndex+"&amp;max-results="+maxResults;

			print("Start to load feed:",url);

			dlok = loadXMLFile(url);
			if (dlok != null)
			{
				titleArray = null;
				thumbnailArray = null;
				urlArray = null;
				idArray = null;

				itemSize = getXMLElementCount("feed","entry");
				if(itemSize == 0)
					postMessage("return");
				print("Item Size = ", itemSize);

				totalResults = getXMLText("feed", "openSearch:totalResults");
				startIndex = getXMLText("feed", "openSearch:startIndex");
				itemsPerPage = getXMLText("feed", "openSearch:itemsPerPage");

				print("totalResults=",totalResults);
				print("startIndex=",startIndex);
				print("itemsPerPage=",itemsPerPage);

				count=0;
				while(itemSize != 0)
				{
					title     = getXMLText("feed","entry",count,"title");
					id        = getXMLText("feed","entry",count,"id");
					url       = getXMLAttribute("feed","entry",count,"media:group","media:player","url");
					thumbnail = getXMLAttribute("feed","entry",count,"media:group","media:thumbnail",0,"url");

					titleArray  = pushBackStringArray(titleArray, title);
					urlArray    = pushBackStringArray(urlArray, url);
					idArray     = pushBackStringArray(idArray, id);
					thumbnailArray = pushBackStringArray(thumbnailArray, thumbnail);

					count += 1;
					if (count == itemSize)
						break;
				}
				print("title array =", titleArray);
				setFocusItemIndex(idx);
				redrawDisplay();
			}
		}
		else if(mode == 0)
		{
			print("Wait for movie stop");
			vidProgress = getPlaybackStatus();
			playStatus = getStringArrayAt(vidProgress, 3);
			if(playStatus == 0)
			{
				cancelIdle();
				setRefreshTime(-1);
			}
		}
	</onRefresh>

	<submenu>
		<title>Siguiente</title>

		<onClick>
			next = page * maxResults;
			if( next &lt; totalResults )
			{
				idx = 0;
				page = page + 1;
				mode = 1;
				setRefreshTime(1);
			}
			null;
		</onClick>
	</submenu>

	<submenu>
		<title>Anterior</title>

		<onClick>
			if(page &gt; 1)
			{
				idx = 0;
				page = page - 1;
				mode = 1;
				setRefreshTime(1);
			}
			null;
		</onClick>
	</submenu>

	<search>
		<mediaDisplay name="photoView" />
	</search>

	<submenu>
		<title>Buscar</title>

		<onClick>
			keyword = doModalRss("rss_file://../etc/translate/rss/youtube/key/keyboard.rss","mediaDisplay","search",0);
			/* keyword= getInput(); */
			if (keyword!=null &amp;&amp; keyword!="")
			{
				history += 1;
				historyUrl = pushBackStringArray(historyUrl, feedUrl);
				historyTitle = pushBackStringArray(historyTitle, pageTitle);
				historyPage = pushBackStringArray(historyPage, page);
				historyIdx = pushBackStringArray(historyIdx, getFocusItemIndex());

				youtubeApiSearchBaseURL = "http://gdata.youtube.com/feeds/api/videos?";
				url = youtubeApiSearchBaseURL;

				regionKeyword = keyword;

				if(youtubeRegion == "RU")
				{
					dlok = loadXMLFile(translate_base_url+"translit,,"+urlEncode(keyword));
					if (dlok != null)
					{
						value = getXMLText("string");
						if(value != null)
							regionKeyword = value;
					}
				}

				title = "Búsqueda: "+regionKeyword;

				arr = readStringFromFile(storagePath);
				feedUrl = getStringArrayAt(arr, 0);
				feedUrl += "orderby=relevance&amp;vq=" + urlEncode(regionKeyword) + "&amp;";

				pageTitle = title;

				print("keyword=",keyword);
				print("feedUrl=",feedUrl);

				idx = 0;
				page = 1;
				mode = 1;
				setRefreshTime(1);
			}
			null;
		</onClick>
	</submenu>

	<item_template>
		<displayTitle>
			<script>getStringArrayAt(titleArray , -1);</script>
		</displayTitle>

		<media:thumbnail>
			<script>getStringArrayAt(thumbnailArray , -1);</script>
		</media:thumbnail>

		<mediaDisplay name="threePartsView"
			sideLeftWidthPC="0"
			sideRightWidthPC="0"
			backgroundColor="8:8:8" >

			<idleImage idleImageYPC="45" idleImageHeightPC="10">../etc/translate/rss/image/POPUP_LOADING_01.png
				<idleImageWidthPC><script>10 * screenYp / screenXp;</script></idleImageWidthPC>
				<idleImageXPC><script>45 + 10 * (1 - screenYp / screenXp) / 2;</script></idleImageXPC>
			</idleImage>
			<idleImage idleImageYPC="45" idleImageHeightPC="10">../etc/translate/rss/image/POPUP_LOADING_02.png
				<idleImageWidthPC><script>10 * screenYp / screenXp;</script></idleImageWidthPC>
				<idleImageXPC><script>45 + 10 * (1 - screenYp / screenXp) / 2;</script></idleImageXPC>
			</idleImage>
			<idleImage idleImageYPC="45" idleImageHeightPC="10">../etc/translate/rss/image/POPUP_LOADING_03.png
				<idleImageWidthPC><script>10 * screenYp / screenXp;</script></idleImageWidthPC>
				<idleImageXPC><script>45 + 10 * (1 - screenYp / screenXp) / 2;</script></idleImageXPC>
			</idleImage>
			<idleImage idleImageYPC="45" idleImageHeightPC="10">../etc/translate/rss/image/POPUP_LOADING_04.png
				<idleImageWidthPC><script>10 * screenYp / screenXp;</script></idleImageWidthPC>
				<idleImageXPC><script>45 + 10 * (1 - screenYp / screenXp) / 2;</script></idleImageXPC>
			</idleImage>
			<idleImage idleImageYPC="45" idleImageHeightPC="10">../etc/translate/rss/image/POPUP_LOADING_05.png
				<idleImageWidthPC><script>10 * screenYp / screenXp;</script></idleImageWidthPC>
				<idleImageXPC><script>45 + 10 * (1 - screenYp / screenXp) / 2;</script></idleImageXPC>
			</idleImage>
			<idleImage idleImageYPC="45" idleImageHeightPC="10">../etc/translate/rss/image/POPUP_LOADING_06.png
				<idleImageWidthPC><script>10 * screenYp / screenXp;</script></idleImageWidthPC>
				<idleImageXPC><script>45 + 10 * (1 - screenYp / screenXp) / 2;</script></idleImageXPC>
			</idleImage>
			<idleImage idleImageYPC="45" idleImageHeightPC="10">../etc/translate/rss/image/POPUP_LOADING_07.png
				<idleImageWidthPC><script>10 * screenYp / screenXp;</script></idleImageWidthPC>
				<idleImageXPC><script>45 + 10 * (1 - screenYp / screenXp) / 2;</script></idleImageXPC>
			</idleImage>
			<idleImage idleImageYPC="45" idleImageHeightPC="10">../etc/translate/rss/image/POPUP_LOADING_08.png
				<idleImageWidthPC><script>10 * screenYp / screenXp;</script></idleImageWidthPC>
				<idleImageXPC><script>45 + 10 * (1 - screenYp / screenXp) / 2;</script></idleImageXPC>
			</idleImage>
		</mediaDisplay>
		<!--
		<link>rss_file://../etc/translate/rss/xspf/streamPlayer.rss</link>
		-->
		<onClick>
			idx = getFocusItemIndex();
			url   = getStringArrayAt(urlArray, idx);

			infoUrl = translate_base_url+"info,HD:"+hd+","+urlEncode(url);

			dlok = loadXMLFile(infoUrl);
			if (dlok != null)
			{
				historyPath = getStoragePath("key")+"translate.history_video.m3u";
				historydat = readStringFromFile(historyPath);
				if(historydat == null)
					historydat = pushBackStringArray(historydat, "#EXTM3U");
				historydat = pushBackStringArray(historydat, "#EXTINF:-1,"+getStringArrayAt(titleArray, idx));
				historydat = pushBackStringArray(historydat, url);
				writeStringToFile(historyPath, historydat);

				value = getXMLAttribute("info","stream","type");
				if(value != null)
					type = value;

				value = getXMLAttribute("info","stream","url");
				if(value != null)
					url = value;

				urlToPlay = url;
				showIdle();
				mode = 0;
				setRefreshTime(100);
				playItemURL(urlToPlay, 0);
				cancelIdle();
			}
		</onClick>
	</item_template>

	<channel>	
		<itemSize>
			<script>itemSize;</script>
		</itemSize>

	</channel>
</rss>
